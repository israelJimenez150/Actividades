<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <title>Clasificación Flor Iris</title>
  <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs"></script>
</head>
<body>
  <h2>Clasificación de la flor IRIS</h2>
  <div>
    <p>Datos de la flor IRIS:</p>
    <pre id="datosFlor"></pre>
  </div>

  <label for="indice">Selecciona índice de la flor (0 a N):</label>
  <input type="number" id="indice" min="0" max="99">
  <button onclick="predecirFlor()">Predecir</button>

  <p id="resultado">Esperando entrada...</p>

  <script>
    const datosEntrada = [
      [5.1, 3.5, 1.4, 0.2],
      [4.9, 3.0, 1.4, 0.2],
      [5.8, 2.7, 5.1, 1.9],
      [6.0, 3.0, 4.8, 1.8],
      [5.0, 3.4, 1.5, 0.2],
      [6.7, 3.1, 4.4, 1.4],
      [6.3, 2.3, 4.4, 1.3],
      [4.6, 3.2, 1.4, 0.2],
      [7.1, 3.0, 5.9, 2.1],
      [6.3, 3.3, 6.0, 2.5]
    ];

    const etiquetas = [
      [1, 0, 0], // Setosa
      [1, 0, 0],
      [0, 0, 1], // Virginica
      [0, 1, 0], // Versicolor
      [1, 0, 0],
      [0, 1, 0],
      [0, 1, 0],
      [1, 0, 0],
      [0, 0, 1],
      [0, 0, 1]
    ];

    document.getElementById("datosFlor").textContent =
      datosEntrada.map((d, i) => `${i}: [${d.join(', ')}]`).join('\n');

    const model = tf.sequential();
    model.add(tf.layers.dense({ inputShape: [4], units: 8, activation: 'relu' }));
    model.add(tf.layers.dense({ units: 3, activation: 'softmax' }));

    model.compile({
      optimizer: 'adam',
      loss: 'categoricalCrossentropy',
      metrics: ['accuracy']
    });

    async function entrenar() {
      const xs = tf.tensor2d(datosEntrada);
      const ys = tf.tensor2d(etiquetas);

      await model.fit(xs, ys, {
        epochs: 200,
        callbacks: {
          onEpochEnd: (epoch, logs) => {
            if (epoch % 50 === 0) {
              console.log(`Época ${epoch + 1} - Precisión: ${logs.acc.toFixed(2)}`);
            }
          }
        }
      });
    }

    async function predecirFlor() {
      const idx = parseInt(document.getElementById("indice").value);
      if (isNaN(idx) || idx < 0 || idx >= datosEntrada.length) {
        document.getElementById("resultado").textContent = "Índice inválido.";
        return;
      }

      const input = tf.tensor2d([datosEntrada[idx]]);
      const pred = await model.predict(input).data();
      const clases = ["Setosa", "Versicolor", "Virginica"];
      const maxIndex = pred.indexOf(Math.max(...pred));

      document.getElementById("resultado").textContent =
        `Predicción: ${clases[maxIndex]} (probabilidades: ${pred.map(p => p.toFixed(2)).join(", ")})`;
    }

    entrenar();
  </script>
</body>
</html>
